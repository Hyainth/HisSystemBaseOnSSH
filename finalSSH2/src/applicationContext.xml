<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        				   https://www.springframework.org/schema/beans/spring-beans.xsd
        				   http://www.springframework.org/schema/aop
        				   https://www.springframework.org/schema/aop/spring-aop.xsd
        				   http://www.springframework.org/schema/tx
        				   https://www.springframework.org/schema/tx/spring-tx.xsd
        				   http://www.springframework.org/schema/context
        				   https://www.springframework.org/schema/context/spring-context.xsd">
        				   
    <!--定义数据源Bean，使用C3P0数据源实现-->
<!--	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
<!--    	<property name="driverClass" value="org.sqlite.JDBC"></property>-->
<!--	  	<property name="jdbcUrl" value="jdbc:sqlite:/Users/hyacinth/Desktop/company2.db"></property>-->
<!--		<property name="user" value="" />-->
<!--       	<property name="password" value="" />-->
<!--     </bean>-->

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.cj.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/Hospital?user=root&amp;password=&amp;useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;useSSL=false"></property>
		<property name="user" value="root" />
		<property name="password" value="123456789" />
	</bean>
     
    <!--定义Hibernate的SessionFactory-->
    <bean id="sessionFactory"   
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
      	<property name="dataSource" ref="dataSource"/>
       	<property name="mappingResources">
           <list>
			   <value>hzcc/domain/Account.hbm.xml</value>
			   <value>hzcc/domain/Project.hbm.xml</value>
			   <value>hzcc/domain/Department.hbm.xml</value>
			   <value>hzcc/domain/Order.hbm.xml</value>
			   <value>hzcc/domain/Member.hbm.xml</value>
           </list>
      	</property>
      	<!--设置Hibernate的属性-->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.current_session_context_class">
					org.springframework.orm.hibernate5.SpringSessionContext</prop>
			</props>
		</property>
    </bean>

	<!-- accountDao -->
	<bean id="accountDao" class="hzcc.dao.impl.AccountDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>

	<!-- departmentDao -->
	<bean id="departmentDao" class="hzcc.dao.impl.DepartmentDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>

	<!-- projectDao -->
	<bean id="projectDao" class="hzcc.dao.impl.ProjectDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>

	<!-- orderDao -->
	<bean id="orderDao" class="hzcc.dao.impl.OrderDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>

	<!-- memberDao -->
	<bean id="memberDao" class="hzcc.dao.impl.MemberDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>

<!--	Service-->
	<!-- 配置accountService -->
	<bean id="accountService" class="hzcc.service.impl.AccountServiceImpl">
		<!-- 注入accountDao属性 -->
		<property name="accountDao" ref="accountDao"></property>
		<property name="memberDao" ref="memberDao"></property>
	</bean>

	<!-- 配置departmentService -->
	<bean id="departmentService" class="hzcc.service.impl.DepartmentServiceImpl">
		<!-- 注入departmentDao属性 -->
		<property name="departmentDao" ref="departmentDao"></property>
	</bean>

	<!-- 配置ProjectDao -->
	<bean id="projectService" class="hzcc.service.impl.ProjectServiceImpl">
		<!-- 注入departmentDao属性 -->
		<property name="projectDao" ref="projectDao"></property>
		<!-- 注入departmentDao属性 -->
		<property name="departmentDao" ref="departmentDao"></property>
	</bean>

	<!-- 配置orderService -->
	<bean id="orderService" class="hzcc.service.impl.OrderServiceImpl">
		<!-- 注入departmentDao属性 -->
		<property name="orderDao" ref="orderDao"></property>
		<property name="projectDao" ref="projectDao"></property>
		<property name="memberDao" ref="memberDao"></property>
	</bean>

	<!-- 配置accountAction -->
	<bean id="accountAction" class="hzcc.web.action.AccountAction" scope="prototype">
		<property name="accountService" ref="accountService"></property>
	</bean>

	<!-- 配置departmentAction -->
	<bean id="departmentAction" class="hzcc.web.action.DepartmentAction" scope="prototype">
		<property name="departmentService" ref="departmentService"></property>
	</bean>

	<!-- 配置projectAction -->
	<bean id="projectAction" class="hzcc.web.action.ProjectAction" scope="prototype">
		<property name="projectService" ref="projectService"></property>
	</bean>

	<bean id="orderAction" class="hzcc.web.action.OrderAction" scope="prototype">
		<property name="orderService" ref="orderService"></property>
	</bean>


	<!--	&lt;!&ndash; 配置accountAction &ndash;&gt;-->
<!--	<bean id="accountAction" class="hzcc.web.action.AccountAction" scope="prototype">-->
<!--		<property name="accountService" ref="accountService"></property>-->
<!--	</bean>-->







	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
    	<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- 开启spring对注解事务的支持 -->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
</beans>
